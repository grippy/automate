package:
  name: my-recipe
  version: "1.0.0"

dependencies:
  provider:
    name1: "../provider/name1/mod.ts"
    name2: "../provider/name2/mod.ts"
    name3/v3:
      path: "github://org/automate/provider/name3/v3/mod.ts"
  recipe:
    build-app: "../recipe/build-app/mod.ts"
    install-app:
      path: "../recipe/install-app/mod.ts"

template:
  helpers:
    $: "../utils/mod.ts"

values:
  key1: value1
  key2: value2
  recipe:
    install-app:
      values:
        - ./values.yaml
        - ./values/{{ values.env }}.yaml
    build-app:
      values:
        - ./values.yaml
        - ./values/{{ values.env }}.yaml

recipe:
  setup:
    - provider/name1/get:
        in:
          arg1: "{{ values.key1 | $.utils.fn1 }}"
        out: state.key1
    - provider/name1/list:
        in:
          arg1: "{{ values.key2 }}"
        out: state.mylist
    - provider/values/merge:
        in:
          files: "{{ values.build-app.values }}"
        out: "build-app.values"

  build-app:
    recipe/build-app/call:
      files: "{{ values.runtime.build-app }}"

  install-app:
    notes: "alternate way to run programs"
    bash: |
      automate recipe {{ step.name }} run \
        --value={{ values.{{ step.name }}.values[0] }}
        --value={{ values.{{ step.name }}.values[1] }}
